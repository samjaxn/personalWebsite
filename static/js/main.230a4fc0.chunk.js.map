{"version":3,"sources":["components/Loading.js","components/Header.js","components/Footer.js","components/Main.js","components/Jacky.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["Component","Header","className","Grid","container","spacing","justify","alignItems","item","xs","Footer","href","target","icon","faInstagram","color","size","Main","Container","maxWidth","Model","mouse","props","group","useRef","useLoader","GLTFLoader","nodes","materials","animations","useThree","viewport","aspectX","aspect","width","aspectY","height","useState","setHover","click","setActive","useSpring","config","mass","tension","friction","precision","spring","useFrame","current","position","x","lerp","rotation","y","THREE","degToRad","ref","dispose","onPointerOver","e","onPointerOut","onClick","name","object","CINEMA_4D_Editor","material","geometry","Extrude_1","Rounding_1","Rounding_2","Extrude","Cap_1","Cap_2","CameraUpdate","camera","z","Body","setMouse","setTouch","onMouseMove","useCallback","clientX","clientY","window","innerWidth","innerHeight","onTouchMove","touch","touches","pageX","pageY","useEffect","fov","near","far","onMouseUp","onMouseDown","onTouchStart","onTouchEnd","intensity","onUpdate","self","lookAt","fallback","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0VAE6BA,Y,qBCcdC,EAZA,WACX,OACI,yBAAKC,UAAU,UACX,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,eAAeC,WAAW,UAC1D,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIP,UAAU,iB,gBCY9BQ,EAdA,WACX,OACI,yBAAKR,UAAU,UACX,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGE,WAAW,UACnC,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIP,UAAU,aACzB,uBAAGS,KAAK,wCAAwCC,OAAO,UACnD,kBAAC,IAAD,CAAiBC,KAAMC,IAAaC,MAAM,UAAUC,KAAK,YCLlE,SAASC,IACpB,OACI,yBAAKf,UAAU,QACX,kBAACgB,EAAA,EAAD,CAAWC,SAAS,KAAKjB,UAAU,aAC/B,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,6BCLD,SAASkB,EAAT,GAAmC,IAAnBC,EAAkB,EAAlBA,MAAUC,EAAQ,yBACzCC,EAAQC,mBADiC,EAENC,YAAUC,IAAY,cAAvDC,EAFuC,EAEvCA,MAAOC,EAFgC,EAEhCA,UAFgC,KAErBC,WAESC,eAA3Bd,EAJuC,EAIvCA,KAAMe,EAJiC,EAIjCA,SACRC,GALyC,EAIvBC,OACRjB,EAAKkB,MAAOH,EAASG,OAC/BC,EAAUnB,EAAKoB,OAAQL,EAASK,OANS,EAQnBC,oBAAS,GARU,mBAQ/BC,GAR+B,aASpBD,oBAAS,GATW,mBASxCE,EATwC,KASjCC,EATiC,OAUzBC,YAAU,CAE9BC,OAAQ,CAAEC,KAAM,GAAIC,QAAS,IAAMC,SAAU,IAAKC,UAAW,QAFpDC,EAVoC,kBA0B/C,OAVAC,aAAS,WACJzB,EAAM0B,UACL1B,EAAM0B,QAAQC,SAASC,EAAIC,IAAK7B,EAAM0B,QAAQC,SAASC,EAAG9B,EAAM4B,QAAQ,GAAKjB,EAAU,GAAI,IAC3FT,EAAM0B,QAAQI,SAASF,EAAIC,IAAK7B,EAAM0B,QAAQI,SAASF,EAAG,EAAI9B,EAAM4B,QAAQ,GAAKjB,EAAU,GAAI,IAC/FT,EAAM0B,QAAQI,SAASC,EAAIF,IAAK7B,EAAM0B,QAAQI,SAASC,EAAG,EAAIjC,EAAM4B,QAAQ,GAAKd,EAAU,GAAI,IAEvFZ,EAAM0B,QAAQI,SAASF,EAA/BZ,EAAmCa,IAAK7B,EAAM0B,QAAQI,SAASF,EAAG5B,EAAM0B,QAAQI,SAASF,EAAG,IAAkCC,IAAK7B,EAAM0B,QAAQI,SAASF,EAAI5B,EAAM0B,QAAQI,SAASF,EAAII,OAAWC,SAAS,KAAM,QAKvN,kBAAC,IAASjC,MAAV,eACAkC,IAAKlC,EACLmC,QAAS,MACLX,EACAzB,EAJJ,CAKAqC,cAAe,SAAAC,GAAC,OAAItB,GAAS,IAC7BuB,aAAc,SAAAD,GAAC,OAAItB,GAAS,IAC5BwB,QAAS,SAAAF,GAAC,OAAIpB,GAAWD,MACvB,2BAAOwB,KAAK,cACV,2BAAOA,KAAK,YACV,+BAAWC,OAAQrC,EAAMsC,mBACzB,2BAAOF,KAAK,SACV,0BACEG,SAAUtC,EAAU,mCACpBuC,SAAUxC,EAAMyC,UAAUD,SAC1BJ,KAAK,YACLb,SAAU,CAAC,GAAI,KAAO,MACtB,0BACEgB,SAAUtC,EAAU,mCACpBuC,SAAUxC,EAAM0C,WAAWF,SAC3BJ,KAAK,eAEP,0BACEG,SAAUtC,EAAU,mCACpBuC,SAAUxC,EAAM2C,WAAWH,SAC3BJ,KAAK,gBAGT,0BACEG,SAAUtC,EAAU,4BACpBuC,SAAUxC,EAAM4C,QAAQJ,SACxBJ,KAAK,UACLb,SAAU,CAAC,GAAI,IAAM,MACrB,0BAAMgB,SAAUtC,EAAU,4BAA6BuC,SAAUxC,EAAM6C,MAAML,SAAUJ,KAAK,UAC5F,0BAAMG,SAAUtC,EAAU,4BAA6BuC,SAAUxC,EAAM8C,MAAMN,SAAUJ,KAAK,eCuB1G,SAASW,IAAe,IAAD,EACsB5C,cAAlBG,GADJ,EACZjB,KADY,EACNe,SADM,EACIE,QAAQ0C,EADZ,EACYA,OAS/B,OANIA,EAAOzB,SAAS0B,EADjB3C,EAAS,KACc,GAAGA,EAAS,GAGd,EAGjB,KAGI,SAAS4C,EAAKvD,GAAQ,IAAD,EACPe,oBAAS,GADF,gCAEFA,oBAAS,IAFP,mBAEdyC,GAFc,aAGFzC,oBAAS,GAHP,mBAGd0C,GAHc,WAI1B1D,EAAQG,iBAAO,CAAC,EAAE,IAClBwD,EAAcC,uBAAY,gBAAY9B,EAAZ,EAAG+B,QAAqB5B,EAAxB,EAAe6B,QAAf,OAAgC9D,EAAM4B,QAAU,CAACE,EAAIiC,OAAOC,WAAa,EAAG/B,EAAI8B,OAAOE,YAAc,KAAK,IACpIC,EAAcN,uBAAY,SAACrB,GAC7B,IAAI4B,EAAQ5B,EAAE6B,QAAQ,GACtBpE,EAAM4B,QAAU,CAACuC,EAAME,MAAQN,OAAOC,WAAa,EAAGG,EAAMG,MAAQP,OAAOE,YAAc,KAC1F,IAaH,OANAM,qBAAU,eAON,yBAAK1F,UAAU,QACX,kBAAC,IAAD,CAAQA,UAAU,SACdyE,OAAQ,CAAEzB,SAAU,CAAC,EAAG,EAAG,GAAI2C,IAAK,GAAIC,KAAM,GAAKC,IAAK,KAKxDf,YAAaA,EACbO,YAAaA,EACbS,UAAW,kBAAMlB,GAAS,IAC1BmB,YAAa,kBAAMnB,GAAS,IAC5BoB,aAAc,kBAAMnB,GAAS,IAC7BoB,WAzBO,WACfpB,GAAS,GACT1D,EAAM4B,QAAU,CAAC,EAAE,KAyBX,mCAAelC,MAAO,SAAUqF,UAAW,GAAIlE,MAAO,IAAKE,OAAQ,EAAGc,SAAU,CAAC,EAAG,IAAK,KAAMmD,SAAU,SAAAC,GAAI,OAAIA,EAAKC,OAAO,IAAIhD,UAAc,EAAG,EAAG,OAKrJ,kBAAC,WAAD,CAAUiD,SAAU,MAChB,kBAAC,EAAD,CAAOnF,MAAOA,KAMlB,kBAACqD,EAAD,OAEJ,kBAACzD,EAAD,OCjJGwF,MANf,WACE,OACI,kBAAC5B,EAAD,OCMc6B,QACW,cAA7BtB,OAAOuB,SAASC,UAEe,UAA7BxB,OAAOuB,SAASC,UAEhBxB,OAAOuB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.230a4fc0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport anime from '../../node_modules/animejs/lib/anime';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <Grid container spacing={1} justify=\"space-around\" alignItems=\"center\">\r\n                <Grid item xs={12} className=\"instagram\">\r\n                    {/* <h1>JACKY</h1> */}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport anime from '../../node_modules/animejs/lib/anime';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInstagram, faInstagramSquare  } from '@fortawesome/free-brands-svg-icons'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"Footer\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n                <Grid item xs={12} className=\"instagram\">\r\n                    <a href=\"https://www.instagram.com/jackyjacksn\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={faInstagram} color=\"#505050\" size=\"1x\"/>\r\n                    </a>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Loading from './Loading';\r\nimport anime from '../../node_modules/animejs/lib/anime';\r\nimport Container from '@material-ui/core/Container';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n\r\nexport default function Main() {\r\n    return (\r\n        <div className=\"Main\">\r\n            <Container maxWidth=\"xl\" className=\"Container\">\r\n                <Header />\r\n                <Footer />\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import * as THREE from 'three'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useSpring, animated } from 'react-spring/three' \nimport { useLoader, useFrame, useThree } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport lerp from 'lerp'\n\nexport default function Model({mouse, ...props}) {\n  const group = useRef()\n  const { nodes, materials, animations } = useLoader(GLTFLoader, '/jacky.glb')\n\n  const { size, viewport, aspect } = useThree()\n  const aspectX = size.width/ viewport.width\n  const aspectY = size.height/ viewport.height\n\n  const [hovered, setHover] = useState(false)\n  const [click, setActive] = useState(false)\n  const { ...spring } = useSpring({\n    // scale: hovered ? [1.2, 1.2, 1.2] : [1, 1, 1],\n    config: { mass: 10, tension: 1000, friction: 300, precision: 0.00001 }\n  })\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    if(group.current){\n        group.current.position.x = lerp(group.current.position.x, mouse.current[0] / aspectX / 35, 0.1)\n        group.current.rotation.x = lerp(group.current.rotation.x, 0 + mouse.current[1] / aspectX / 15, 0.1)\n        group.current.rotation.y = lerp(group.current.rotation.y, 0 + mouse.current[0] / aspectY / 40, 0.1)\n        \n        click ? group.current.rotation.x = lerp(group.current.rotation.x, group.current.rotation.x, 0.1) : group.current.rotation.x = lerp(group.current.rotation.x,  group.current.rotation.x + THREE.Math.degToRad(360), 0.1)\n    }\n  })\n\n  return (\n    <animated.group\n    ref={group}\n    dispose={null}\n    {...spring}\n    {...props}\n    onPointerOver={e => setHover(true)}\n    onPointerOut={e => setHover(false)}\n    onClick={e => setActive(!click)}>\n      <scene name=\"Root Scene\">\n        <group name=\"RootNode\">\n          <primitive object={nodes.CINEMA_4D_Editor} />\n          <group name=\"JACKY\">\n            <mesh\n              material={materials['Plastic Shiny warped Procedural']}\n              geometry={nodes.Extrude_1.geometry}\n              name=\"Extrude_1\"\n              position={[0, -0.51, -0.05]}>\n              <mesh\n                material={materials['Plastic Shiny warped Procedural']}\n                geometry={nodes.Rounding_1.geometry}\n                name=\"Rounding_1\"\n              />\n              <mesh\n                material={materials['Plastic Shiny warped Procedural']}\n                geometry={nodes.Rounding_2.geometry}\n                name=\"Rounding_2\"\n              />\n            </mesh>\n            <mesh\n              material={materials['Plastic Dark  Procedural']}\n              geometry={nodes.Extrude.geometry}\n              name=\"Extrude\"\n              position={[0, -0.51, 0.05]}>\n              <mesh material={materials['Plastic Dark  Procedural']} geometry={nodes.Cap_1.geometry} name=\"Cap_1\" />\n              <mesh material={materials['Plastic Dark  Procedural']} geometry={nodes.Cap_2.geometry} name=\"Cap_2\" />\n            </mesh>\n          </group>\n        </group>\n      </scene>\n    </animated.group>\n  )\n}","import React, { Suspense, useEffect, useRef, useState, useCallback, useMemo } from 'react'\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { Canvas, useFrame, useLoader, useThree } from 'react-three-fiber'\r\nimport Main from './Main';\r\nimport Jacky from './Jacky'\r\n\r\nconst sceneSetup = () => {\r\n    \r\n}\r\n\r\nconst addCustomSceneObjects  = () => {\r\n\r\n}\r\n\r\nconst startAnimationLoop = () => {\r\n\r\n}\r\n\r\nfunction Box(props) {\r\n    // This reference will give us direct access to the mesh\r\n    const mesh = useRef()\r\n  \r\n    // Set up state for the hovered and active state\r\n    const [hovered, setHover] = useState(false)\r\n    const [active, setActive] = useState(false)\r\n  \r\n    // Rotate mesh every frame, this is outside of React without overhead\r\n    useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\r\n  \r\n    return (\r\n      <mesh\r\n        {...props}\r\n        ref={mesh}\r\n        scale={active ? [2, 2, 2] : [1, 1, 1]}\r\n        onClick={e => setActive(!active)}\r\n        onPointerOver={e => setHover(true)}\r\n        onPointerOut={e => setHover(false)}>\r\n        <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\r\n        <meshStandardMaterial attach=\"material\" color={hovered ? 'hotpink' : 'orange'} />\r\n      </mesh>\r\n    )\r\n}\r\n\r\nfunction Sphere(props){\r\n    const sphere = useRef()\r\n\r\n    const [hovered, setHover] = useState(false)\r\n    const [active, setActive] = useState(false)\r\n\r\n    useFrame(() => (sphere.current.rotation.y += 0.01))\r\n\r\n    return(\r\n        <mesh\r\n            {...props}\r\n            ref={sphere}\r\n            onClick={e => setActive(!active)}\r\n            onPointerOver={e => setHover(true)}\r\n            onPointerOut={e => setHover(false)}>\r\n            <sphereGeometry attach=\"geometry\" args={[2, 16, 16]} />\r\n            <meshStandardMaterial attach=\"material\" color={hovered ? '#555555' : 'white'} roughness={0} metalness={0} wireframe={true}/>\r\n        </mesh>\r\n    )\r\n}\r\n\r\nfunction Circle({radius, ...props}){\r\n    const segmentCount = 64\r\n    const vertices = []\r\n\r\n    for (var i = 0; i <= segmentCount; i++) {\r\n        var theta = (i / segmentCount) * Math.PI * 2\r\n        vertices.push(\r\n            new THREE.Vector3(Math.cos(theta) * radius, Math.sin(theta) * radius, 0)\r\n        )            \r\n    }\r\n\r\n    return(\r\n        <line {...props}>\r\n            <geometry attach=\"geometry\" vertices={vertices} />\r\n            <lineBasicMaterial attach=\"material\" color={'#FFFFFF'} />\r\n        </line>\r\n    )\r\n}\r\n\r\nconst Plane = ({...props}) => (\r\n    <mesh {...props} receiveShadow>\r\n        <planeBufferGeometry attach=\"geometry\" args={[100,100]} />\r\n        <meshPhysicalMaterial attach=\"material\" color=\"#0a0a0a\" />\r\n    </mesh>\r\n)\r\n\r\nfunction CameraUpdate(){\r\n    const {size, viewport, aspect, camera} = useThree()\r\n\r\n    if(aspect < 1.4){\r\n        camera.position.z = (-14*aspect + 24)\r\n    }\r\n    else{\r\n        camera.position.z = 5\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default function Body(props) {\r\n    const [hovered, hover] = useState(false)\r\n    const [mouseDown, setMouse] = useState(false)\r\n    const [touchDown, setTouch] = useState(false)\r\n    const mouse = useRef([0,0])\r\n    const onMouseMove = useCallback(({ clientX: x, clientY: y}) => (mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2]), [])\r\n    const onTouchMove = useCallback((e) => {\r\n        var touch = e.touches[0];\r\n        mouse.current = [touch.pageX - window.innerWidth / 2, touch.pageY - window.innerHeight / 2]\r\n    }, [])\r\n    const onTouchEnd = () => {\r\n        setTouch(false)\r\n        mouse.current = [0,0]\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        sceneSetup()\r\n        addCustomSceneObjects()\r\n        startAnimationLoop()\r\n    })\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <Canvas className=\"canvas\"\r\n                camera={{ position: [0, 0, 5], fov: 60, near: 0.1, far: 5000 }}\r\n                // onCreated={({ gl }) => { \r\n                //     gl.shadowMap.enabled = true\r\n                //     gl.shadowMap.type = THREE.PCFSoftShadowMap\r\n                // }}\r\n                onMouseMove={onMouseMove}\r\n                onTouchMove={onTouchMove}\r\n                onMouseUp={() => setMouse(false)}\r\n                onMouseDown={() => setMouse(true)}\r\n                onTouchStart={() => setTouch(true)}\r\n                onTouchEnd={onTouchEnd}>\r\n                {/* <ambientLight /> */}\r\n                <rectAreaLight color={0xffffff} intensity={10} width={100} height={2} position={[0, 3.5, 1.5]} onUpdate={self => self.lookAt(new THREE.Vector3(0, 0, 0))} />\r\n                {/* <fog attach=\"fog\" args={['black', 1, 10]} /> */}\r\n                {/* <Box position={[0, 0, 0]} />\r\n                <Box position={[2, 0, 0]} />\r\n                <Box position={[-2, 0, 0]} /> */}\r\n                <Suspense fallback={null}>\r\n                    <Jacky mouse={mouse}/>\r\n                </Suspense>\r\n                {/* <Plane position={[0,0,-3]} /> */}\r\n                {/* <Circle radius={1.5} position={[0, 0, -1]} />\r\n                <Circle radius={2} position={[0, 0, -1]} />\r\n                <Circle radius={2.5} position={[0, 0, -1]} /> */}\r\n                <CameraUpdate />\r\n            </Canvas>\r\n            <Main />\r\n            {/* <a href=\"https://github.com/drcmda/react-three-fiber\" class=\"top-left\" children=\"Github\" />\r\n            <a href=\"https://twitter.com/0xca0a\" class=\"top-right\" children=\"Twitter\" />\r\n            <a href=\"https://github.com/react-spring/react-spring\" class=\"bottom-left\" children=\"+ react-spring\" />\r\n            <a href=\"https://www.instagram.com/tina.henschel/\" class=\"bottom-right\" children=\"Illustrations @ Tina Henschel\" />\r\n            <span class=\"header-major\">testing</span>\r\n            <span class=\"header\">REACT TEST THREE FIBER</span> */}\r\n        </div>\r\n      )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport './App.css';\r\nimport Body from './components/Body';\r\n\r\nfunction App() {\r\n  return (\r\n      <Body />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}